import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: DragAndDropExample(),
    );
  }
}

class CustomData {
  final String stringValue;
  final Color colorValue;

  CustomData({required this.stringValue, required this.colorValue});
}

class DragAndDropExample extends StatefulWidget {
  @override
  _DragAndDropExampleState createState() => _DragAndDropExampleState();
}

class _DragAndDropExampleState extends State<DragAndDropExample> {
  CustomData draggableData = CustomData(stringValue: "Drag me!", colorValue: Colors.blue);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Drag and Drop Example'),
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Draggable<CustomData>(
            data: draggableData,
            child: Container(
              width: 100,
              height: 100,
              color: draggableData.colorValue,
              child: Center(
                child: Text(draggableData.stringValue),
              ),
            ),
            feedback: Container(
              width: 100,
              height: 100,
              color: draggableData.colorValue.withOpacity(0.5),
              child: Center(
                child: Text(draggableData.stringValue),
              ),
            ),
            childWhenDragging: Container(
              width: 100,
              height: 100,
              color: draggableData.colorValue.withOpacity(0.2),
            ),
          ),
          SizedBox(height: 20),
          DragTarget<CustomData>(
            builder: (BuildContext context, List<CustomData?> candidateData, List<dynamic> rejectedData) {
              return Container(
                width: 200,
                height: 200,
                color: Colors.green,
                child: Center(
                  child: Text('Drop here!'),
                ),
              );
            },
            onWillAccept: (data) {
              // Trả về true nếu vùng chấp nhận dữ liệu
              return true;
            },
            onAccept: (data) {
              // Xử lý khi dữ liệu được thả vào vùng chấp nhận
              setState(() {
                draggableData = data!;
              });
            },
          ),
        ],
      ),
    );
  }
}
